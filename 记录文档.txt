本项目学习视频：https://www.bilibili.com/video/BV1qz411z7s3/
讨论博客：https://www.aspirantzhang.com/
相关视频：
	React入门课程https://coding.imooc.com/class/229.html
	Es6精讲：https://ke.qq.com/course/386822
	Typescript：https://coding.imooc.com/class/412.html



Umi
	约定路由：
		如果没有路由配置，那么到src/pages下面根据目录结构得到路由
		Routes配置一般在.umirc.ts 或 config/config.js 里，routes字段
	Q:一般是用约定路由还是配置路由
	代理
		umi -> proxy
		在 .umirc.ts 中配置(配置之后要重启项目)
			proxy: {
				'/api': {
				'target': 'http://jsonplaceholder.typicode.com/',
				'changeOrigin': true,
				'pathRewrite': { '^/api' : '' },
				},
			},
		在service中
			return request('/api/users', {
				method: 'get',
			})
			.then(function(response) {
				console.log(response);
				return response
			})
			.catch(function(error) {
				console.log(error);
			});
	css
		在src/global.css 中定义的样式默认为全局样式
		如果是新增的global.css文件，需要重启项目

Dva
	Redux Store -> Modal
	state -> state
	同步数据 -> Reducer -> 页面从这里面拿数据
	异步数据 -> Effect -> 接口数据
	订阅 -> Subscription -> 页面上使用的，放在了仓库里
	dva in umi
		dva的开始是自动的，如果有用到dva的内容，就会开启，就会在 .umi 下找到对应的plugin-dva

antD
	Umi内部默认引入了antD
	form
		const [form] = Form.useForm();	// 创建表单实例
		<Form form={form}>...</Form>	// 将表单实例应用到表单组件上

		useEffect(() => {				// 给form 赋初始值
			form.setFieldsValue(record)
		},[visible])

		表单提交
			在使用model进行表单提交时
			form.submit()	//提交表单，代替submit
			<Form
				onFinish={onFinish}			//表单提交成功
				onFinishFailed={onFinishFailed}		// 表单提交失败
            >
			</Form>
		
		清空表单值
			form.resetFields()

Model
	Reducer:
		是modal向页面发送数据的唯一出口
		reducers中的函数将内容返回给namespace，然后mapstatetoprops接收namespace并获取数据
		reducer接收的数据 name(state, action){}
	Effect：
		effects调用service——call(funcName,{data})
		effects调用reducers函数——put(action)
		effects调用effects函数——put(action)
	Subscription
		调用effects——dispatch(action)
		调用reducers——dispatch(action)

Component
	组件调用Reducer、Effect——dispatch(action)
		dispatch是从mapstatetoprops中接收到的
		const mapStateToProps = (state)=>{
			return state
		}
		const Component = ({namespace, dispatch})=>{...}
	调用Effect
		在组件中调用effects要注明命名空间（namespace）
		dispatch({
			type:'namespace/effect',
			payload:{}
		})

组件 <-> Model
	用connect将mapstatetoprops和组件连接
	mapstatetoprops接收所有的model及dispatch方法	

Service
	get:
		export const getRemoteList = ()=>{
			return request('http://public-api-v1.aspirantzhang.com/users', {
			method: 'get',
			})
			.then(function(response) {
				console.log(response);
				return response
			})
			.catch(function(error) {
				console.log(error);
			});
		}
	put：（表单）
		export const editRecord = ({value,id})=>{
			console.log('value',value)
			return request(`http://public-api-v1.aspirantzhang.com/users/${id}`, {
				method: 'put',
				data: value,
			})
				.then(function(response) {
				console.log(response);
				// return response
				console.log('ok')
				})
				.catch(function(error) {
				console.log(error);
				});
		}



双层对象的解构赋值
	const obj={
		obj1:{
			a:1
		}
		b:2
	}
	const {obj1:{a}} = obj
	

遇到的问题：
1. Module '"../../../node_modules/umi/types"' has no exported member 'connect'
	【connect没有引入应该与dva有关 .umi的机制貌似是，只要探测到正确的model文件，就会自动开启dva。如果umi已经给开启dva的话，则会在/src/.umi文件夹中看到plugin-dva文件夹。所以，首先检查model文件有没有错误，然后yarn start启动项目，再尝试引入connect。】
	【是model，而不是modal！！！】
2. 为何在 Modal 中调用 form 控制台会报错？#
	这是因为你在调用 form 方法时，Modal 还未初始化导致 form 没有关联任何 Form 组件。你可以通过给 Modal 设置 forceRender 将其预渲染
3. Cannot update during an existing state transition (such as within `render`). Render methods should be a pure function of props and state.
	解决：在 props.visible 改变时触发userEffect，并给表单赋值
	useEffect(() => {
        form.setFieldsValue(props.record)
    },[props.visible])

如何配置项目兼容es11


